# -*- coding: utf-8 -*-
# Generated by Django 1.11.2 on 2017-09-21 21:24
from __future__ import unicode_literals

import ckeditor.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Bootcamp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='datum')),
                ('start_time', models.TimeField(blank=True, null=True, verbose_name='begintijd')),
                ('end_time', models.TimeField(blank=True, null=True, verbose_name='eindtijd')),
                ('places', models.PositiveIntegerField(default=0, verbose_name='beschikbare plaatsen')),
                ('info', ckeditor.fields.RichTextField(blank=True, verbose_name='extra informatie')),
                ('street', models.CharField(blank=True, help_text='Dit is optioneel. Standaard gebruikt de agenda het adres van de zorglocatie', max_length=255, verbose_name='straatnaam')),
                ('number', models.CharField(blank=True, help_text='Dit is optioneel. Standaard gebruikt de agenda het adres van de zorglocatie', max_length=255, verbose_name='huisnummer')),
                ('zipcode', models.CharField(blank=True, help_text='Dit is optioneel. Standaard gebruikt de agenda het adres van de zorglocatie', max_length=255, verbose_name='postcode')),
                ('city', models.CharField(blank=True, help_text='Dit is optioneel. Standaard gebruikt de agenda het adres van de zorglocatie', max_length=255, verbose_name='plaatsnaam')),
            ],
            options={
                'ordering': ['date', 'start_time'],
            },
        ),
        migrations.CreateModel(
            name='Gemeente',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='naam')),
                ('logo', models.ImageField(blank=True, upload_to='')),
                ('website', models.URLField(blank=True)),
            ],
            options={
                'verbose_name_plural': 'Gemeenten',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('identifier', models.CharField(max_length=255, verbose_name='factuurkenmerk')),
                ('date', models.DateField(verbose_name='factuurdatum')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=6, verbose_name='factuurbedrag')),
            ],
            options={
                'verbose_name': 'Factuur',
                'verbose_name_plural': 'Facturen',
                'ordering': ['date'],
            },
        ),
        migrations.CreateModel(
            name='Participant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='naam')),
                ('email', models.EmailField(max_length=254, verbose_name='emailadres')),
                ('bootcamp', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='participants', to='bootcamps.Bootcamp')),
            ],
            options={
                'verbose_name': 'Deelnemer',
                'verbose_name_plural': 'Deelnemers',
            },
        ),
        migrations.CreateModel(
            name='Price',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product', models.PositiveIntegerField(choices=[(1, 'ZorgLocatie'), (2, 'Sportschool')], unique=True)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=6, verbose_name='bedrag')),
            ],
            options={
                'verbose_name': 'Prijs',
                'verbose_name_plural': 'Prijzen',
                'ordering': ['product'],
            },
        ),
        migrations.CreateModel(
            name='Sportschool',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='naam')),
                ('logo', models.ImageField(blank=True, upload_to='')),
                ('photo', models.ImageField(blank=True, upload_to='', verbose_name='foto')),
                ('website', models.URLField(blank=True)),
                ('street', models.CharField(blank=True, max_length=255, verbose_name='straatnaam')),
                ('number', models.CharField(blank=True, max_length=255, verbose_name='huisnummer')),
                ('zipcode', models.CharField(blank=True, max_length=255, verbose_name='postcode')),
                ('city', models.CharField(blank=True, max_length=255, verbose_name='plaatsnaam')),
                ('users', models.ManyToManyField(blank=True, related_name='sportscholen', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
                'verbose_name_plural': 'sportscholen',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Trainer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='naam v.d. trainer')),
                ('photo', models.ImageField(max_length=255, upload_to='', verbose_name='foto')),
            ],
        ),
        migrations.CreateModel(
            name='ZorgLocatie',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='naam')),
                ('logo', models.ImageField(blank=True, upload_to='')),
                ('photo', models.ImageField(blank=True, upload_to='', verbose_name='foto')),
                ('website', models.URLField(blank=True)),
                ('street', models.CharField(blank=True, max_length=255, verbose_name='straatnaam')),
                ('number', models.CharField(blank=True, max_length=255, verbose_name='huisnummer')),
                ('zipcode', models.CharField(blank=True, max_length=255, verbose_name='postcode')),
                ('city', models.CharField(blank=True, max_length=255, verbose_name='plaatsnaam')),
                ('sportscholen', models.ManyToManyField(blank=True, help_text='Selecter hier de sportclubs waarmee deze zorgorganisatie samenwerkt', related_name='zorglocaties', to='bootcamps.Sportschool', verbose_name='Samenwerking met')),
                ('users', models.ManyToManyField(blank=True, related_name='zorglocaties', to=settings.AUTH_USER_MODEL, verbose_name='Gebruikers')),
            ],
            options={
                'abstract': False,
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ZorgOrganisatie',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='naam')),
                ('logo', models.ImageField(blank=True, upload_to='')),
                ('website', models.URLField(blank=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.AddField(
            model_name='zorglocatie',
            name='zorgorganisatie',
            field=models.ForeignKey(blank=True, help_text='(indien van toepassing)', null=True, on_delete=django.db.models.deletion.CASCADE, to='bootcamps.ZorgOrganisatie', verbose_name='Moederorganisatie'),
        ),
        migrations.AddField(
            model_name='invoice',
            name='sportschool',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='bootcamps.Sportschool'),
        ),
        migrations.AddField(
            model_name='invoice',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='invoice',
            name='zorglocatie',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='bootcamps.ZorgLocatie'),
        ),
        migrations.AddField(
            model_name='bootcamp',
            name='sportschool',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='bootcamps.Sportschool'),
        ),
        migrations.AddField(
            model_name='bootcamp',
            name='trainer',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='bootcamps.Trainer'),
        ),
        migrations.AddField(
            model_name='bootcamp',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='bootcamp',
            name='zorglocatie',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='bootcamps.ZorgLocatie'),
        ),
    ]
